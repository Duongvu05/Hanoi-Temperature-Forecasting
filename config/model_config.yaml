# Model Training Configuration

# Model Algorithms
models:
  linear_regression:
    enabled: true
    hyperparameters:
      fit_intercept: [true, false]
      normalize: [true, false]
  
  random_forest:
    enabled: true
    hyperparameters:
      n_estimators: [100, 200, 300, 500]
      max_depth: [10, 20, 30, null]
      min_samples_split: [2, 5, 10]
      min_samples_leaf: [1, 2, 4]
      max_features: ["auto", "sqrt", "log2"]
  
  xgboost:
    enabled: true
    hyperparameters:
      n_estimators: [100, 200, 300]
      max_depth: [3, 6, 9, 12]
      learning_rate: [0.01, 0.1, 0.2]
      subsample: [0.8, 0.9, 1.0]
      colsample_bytree: [0.8, 0.9, 1.0]
      reg_alpha: [0, 0.1, 1.0]
      reg_lambda: [1, 1.5, 2.0]
  
  lightgbm:
    enabled: true
    hyperparameters:
      n_estimators: [100, 200, 300]
      max_depth: [3, 6, 9]
      learning_rate: [0.01, 0.1, 0.2]
      num_leaves: [31, 50, 100]
      subsample: [0.8, 0.9, 1.0]
      colsample_bytree: [0.8, 0.9, 1.0]
      reg_alpha: [0, 0.1, 1.0]
      reg_lambda: [0, 0.1, 1.0]
  
  catboost:
    enabled: true
    hyperparameters:
      iterations: [100, 200, 300]
      depth: [4, 6, 8, 10]
      learning_rate: [0.01, 0.1, 0.2]
      l2_leaf_reg: [1, 3, 5, 7, 9]
      border_count: [32, 64, 128]
  
  neural_network:
    enabled: true
    hyperparameters:
      hidden_layer_sizes: [[50], [100], [50, 50], [100, 50], [100, 100]]
      activation: ["relu", "tanh"]
      solver: ["adam", "lbfgs"]
      alpha: [0.0001, 0.001, 0.01]
      learning_rate: ["constant", "adaptive"]
      max_iter: [200, 500, 1000]

# Training Configuration
training:
  # Data splitting
  test_size: 0.2
  validation_size: 0.2
  random_state: 42
  shuffle: false  # Important for time series data
  
  # Cross-validation
  cv_method: "time_series_split"  # or "k_fold" for non-time series
  cv_folds: 5
  
  # Feature selection
  feature_selection:
    enabled: true
    method: "recursive_feature_elimination"  # or "mutual_info", "correlation"
    n_features: 20
    
  # Scaling
  scaling:
    enabled: true
    method: "standard"  # or "minmax", "robust"

# Evaluation Metrics
metrics:
  primary: "rmse"  # Primary metric for model selection
  
  regression_metrics:
    - "mae"
    - "mse" 
    - "rmse"
    - "r2"
    - "mape"
    - "median_absolute_error"
  
  # Thresholds for model acceptance
  thresholds:
    rmse: 3.0  # Maximum acceptable RMSE in °C
    mape: 15.0  # Maximum acceptable MAPE in %
    r2: 0.7    # Minimum acceptable R² score

# Hyperparameter Optimization
hyperparameter_optimization:
  enabled: true
  method: "optuna"  # or "grid_search", "random_search"
  
  # Optuna specific settings
  optuna:
    n_trials: 100
    timeout: 3600  # seconds
    n_jobs: -1
    
    # Pruning
    pruner: "median"
    n_startup_trials: 10
    n_warmup_steps: 5
    
    # Study settings
    direction: "minimize"  # for RMSE
    study_name: "hanoi_temp_forecasting"
    storage: "sqlite:///optuna_studies.db"

# Model Ensembling
ensemble:
  enabled: true
  methods:
    - "voting"
    - "stacking"
    - "blending"
  
  # Voting ensemble
  voting:
    voting_type: "soft"  # or "hard"
    weights: null  # Auto-calculated based on performance
  
  # Stacking ensemble
  stacking:
    meta_learner: "linear_regression"
    cv_folds: 5
    use_probas: false
  
  # Blending
  blending:
    blend_ratio: [0.4, 0.3, 0.2, 0.1]  # Weights for top 4 models

# Early Stopping
early_stopping:
  enabled: true
  patience: 10
  min_delta: 0.001
  restore_best_weights: true

# Model Persistence
model_persistence:
  save_best_model: true
  save_all_models: false
  model_format: "pickle"  # or "joblib", "onnx"
  
  # Paths
  model_dir: "models/daily/"
  metadata_file: "model_metadata.json"
  
  # Versioning
  versioning: true
  version_format: "v{major}.{minor}.{patch}"

# Logging and Monitoring
logging:
  level: "INFO"
  log_training_progress: true
  log_hyperparameter_trials: true
  
  # MLflow integration
  mlflow:
    enabled: true
    tracking_uri: "http://localhost:5000"
    experiment_name: "hanoi_temperature_forecasting"
  
  # ClearML integration
  clearml:
    enabled: true
    project_name: "Hanoi Weather Forecasting"
    task_name: "Daily Temperature Prediction"